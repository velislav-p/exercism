{"version":3,"sources":["roman-numerals.spec.js"],"names":["describe","test","expect","toEqual","xtest"],"mappings":";;AAAA;;AAEAA,QAAQ,CAAC,WAAD,EAAc,MAAM;AAC1BC,EAAAA,IAAI,CAAC,YAAD,EAAe,MAAMC,MAAM,CAAC,4BAAQ,CAAR,CAAD,CAAN,CAAmBC,OAAnB,CAA2B,GAA3B,CAArB,CAAJ;AACAC,EAAAA,KAAK,CAAC,YAAD,EAAe,MAAMF,MAAM,CAAC,4BAAQ,CAAR,CAAD,CAAN,CAAmBC,OAAnB,CAA2B,IAA3B,CAArB,CAAL;AACAC,EAAAA,KAAK,CAAC,YAAD,EAAe,MAAMF,MAAM,CAAC,4BAAQ,CAAR,CAAD,CAAN,CAAmBC,OAAnB,CAA2B,KAA3B,CAArB,CAAL;AACAC,EAAAA,KAAK,CAAC,YAAD,EAAe,MAAMF,MAAM,CAAC,4BAAQ,CAAR,CAAD,CAAN,CAAmBC,OAAnB,CAA2B,IAA3B,CAArB,CAAL;AACAC,EAAAA,KAAK,CAAC,YAAD,EAAe,MAAMF,MAAM,CAAC,4BAAQ,CAAR,CAAD,CAAN,CAAmBC,OAAnB,CAA2B,GAA3B,CAArB,CAAL;AACAC,EAAAA,KAAK,CAAC,YAAD,EAAe,MAAMF,MAAM,CAAC,4BAAQ,CAAR,CAAD,CAAN,CAAmBC,OAAnB,CAA2B,IAA3B,CAArB,CAAL;AACAC,EAAAA,KAAK,CAAC,YAAD,EAAe,MAAMF,MAAM,CAAC,4BAAQ,CAAR,CAAD,CAAN,CAAmBC,OAAnB,CAA2B,IAA3B,CAArB,CAAL;AACAC,EAAAA,KAAK,CAAC,aAAD,EAAgB,MAAMF,MAAM,CAAC,4BAAQ,EAAR,CAAD,CAAN,CAAoBC,OAApB,CAA4B,OAA5B,CAAtB,CAAL;AACAC,EAAAA,KAAK,CAAC,aAAD,EAAgB,MAAMF,MAAM,CAAC,4BAAQ,EAAR,CAAD,CAAN,CAAoBC,OAApB,CAA4B,QAA5B,CAAtB,CAAL;AACAC,EAAAA,KAAK,CAAC,aAAD,EAAgB,MAAMF,MAAM,CAAC,4BAAQ,EAAR,CAAD,CAAN,CAAoBC,OAApB,CAA4B,KAA5B,CAAtB,CAAL;AACAC,EAAAA,KAAK,CAAC,aAAD,EAAgB,MAAMF,MAAM,CAAC,4BAAQ,EAAR,CAAD,CAAN,CAAoBC,OAApB,CAA4B,OAA5B,CAAtB,CAAL;AACAC,EAAAA,KAAK,CAAC,cAAD,EAAiB,MAAMF,MAAM,CAAC,4BAAQ,GAAR,CAAD,CAAN,CAAqBC,OAArB,CAA6B,MAA7B,CAAvB,CAAL;AACAC,EAAAA,KAAK,CAAC,cAAD,EAAiB,MAAMF,MAAM,CAAC,4BAAQ,GAAR,CAAD,CAAN,CAAqBC,OAArB,CAA6B,QAA7B,CAAvB,CAAL;AACAC,EAAAA,KAAK,CAAC,cAAD,EAAiB,MAAMF,MAAM,CAAC,4BAAQ,GAAR,CAAD,CAAN,CAAqBC,OAArB,CAA6B,MAA7B,CAAvB,CAAL;AACAC,EAAAA,KAAK,CAAC,cAAD,EAAiB,MAAMF,MAAM,CAAC,4BAAQ,GAAR,CAAD,CAAN,CAAqBC,OAArB,CAA6B,OAA7B,CAAvB,CAAL;AACAC,EAAAA,KAAK,CAAC,cAAD,EAAiB,MAAMF,MAAM,CAAC,4BAAQ,GAAR,CAAD,CAAN,CAAqBC,OAArB,CAA6B,MAA7B,CAAvB,CAAL;AACAC,EAAAA,KAAK,CAAC,eAAD,EAAkB,MAAMF,MAAM,CAAC,4BAAQ,IAAR,CAAD,CAAN,CAAsBC,OAAtB,CAA8B,OAA9B,CAAxB,CAAL;AACAC,EAAAA,KAAK,CAAC,eAAD,EAAkB,MAAMF,MAAM,CAAC,4BAAQ,IAAR,CAAD,CAAN,CAAsBC,OAAtB,CAA8B,KAA9B,CAAxB,CAAL;AACD,CAnBO,CAAR","sourcesContent":["import { toRoman } from './roman-numerals';\n\ndescribe('toRoman()', () => {\n  test('converts 1', () => expect(toRoman(1)).toEqual('I'));\n  xtest('converts 2', () => expect(toRoman(2)).toEqual('II'));\n  xtest('converts 3', () => expect(toRoman(3)).toEqual('III'));\n  xtest('converts 4', () => expect(toRoman(4)).toEqual('IV'));\n  xtest('converts 5', () => expect(toRoman(5)).toEqual('V'));\n  xtest('converts 6', () => expect(toRoman(6)).toEqual('VI'));\n  xtest('converts 9', () => expect(toRoman(9)).toEqual('IX'));\n  xtest('converts 27', () => expect(toRoman(27)).toEqual('XXVII'));\n  xtest('converts 48', () => expect(toRoman(48)).toEqual('XLVIII'));\n  xtest('converts 59', () => expect(toRoman(59)).toEqual('LIX'));\n  xtest('converts 93', () => expect(toRoman(93)).toEqual('XCIII'));\n  xtest('converts 141', () => expect(toRoman(141)).toEqual('CXLI'));\n  xtest('converts 163', () => expect(toRoman(163)).toEqual('CLXIII'));\n  xtest('converts 402', () => expect(toRoman(402)).toEqual('CDII'));\n  xtest('converts 575', () => expect(toRoman(575)).toEqual('DLXXV'));\n  xtest('converts 911', () => expect(toRoman(911)).toEqual('CMXI'));\n  xtest('converts 1024', () => expect(toRoman(1024)).toEqual('MXXIV'));\n  xtest('converts 3000', () => expect(toRoman(3000)).toEqual('MMM'));\n});\n"]}