{"version":3,"sources":["darts.spec.js"],"names":["describe","test","x","y","expected","expect","toEqual"],"mappings":"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","sourcesContent":["import { solve } from './darts';\n\ndescribe('Return the correct amount earned by a dart landing in a given point in the target problem', () => {\n  test('A dart lands outside the target', () => {\n    const x = -9;\n    const y = 9;\n    const expected = 0;\n    expect(solve(x, y)).toEqual(expected);\n  });\n\n  test('A dart lands just in the border of the target', () => {\n    const x = 0;\n    const y = 10;\n    const expected = 1;\n    expect(solve(x, y)).toEqual(expected);\n  });\n\n  test('A dart lands in the outer circle', () => {\n    const x = 4;\n    const y = 4;\n    const expected = 1;\n    expect(solve(x, y)).toEqual(expected);\n  });\n\n  test('A dart lands right in the border between outer and middle circles', () => {\n    const x = 5;\n    const y = 0;\n    const expected = 5;\n    expect(solve(x, y)).toEqual(expected);\n  });\n\n  test('A dart lands in the middle circle', () => {\n    const x = 0.8;\n    const y = -0.8;\n    const expected = 5;\n    expect(solve(x, y)).toEqual(expected);\n  });\n\n  test('A dart lands right in the border between middle and inner circles', () => {\n    const x = 0;\n    const y = -1;\n    const expected = 10;\n    expect(solve(x, y)).toEqual(expected);\n  });\n\n  test('A dart lands in the inner circle', () => {\n    const x = -0.1;\n    const y = -0.1;\n    const expected = 10;\n    expect(solve(x, y)).toEqual(expected);\n  });\n\n  test('A dart whose coordinates sum to > 1 but whose radius to origin is <= 1 is scored in the inner circle', () => {\n    const x = 0.4;\n    const y = 0.8;\n    const expected = 10;\n    expect(solve(x, y)).toEqual(expected);\n  });\n\n  test('A dart whose coordinates sum to > 5 but whose radius to origin is <= 5 is scored in the middle circle', () => {\n    const x = 2;\n    const y = 4;\n    const expected = 5;\n    expect(solve(x, y)).toEqual(expected);\n  });\n\n  test('A dart whose coordinates sum to > 10 but whose radius to origin is <= 10 is scored in the outer circle', () => {\n    const x = 4;\n    const y = 8;\n    const expected = 1;\n    expect(solve(x, y)).toEqual(expected);\n  });\n});\n"]}