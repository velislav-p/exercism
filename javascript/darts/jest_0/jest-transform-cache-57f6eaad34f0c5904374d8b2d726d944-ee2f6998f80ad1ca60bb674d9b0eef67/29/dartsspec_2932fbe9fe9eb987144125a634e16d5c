a727f79f48bee096943529291b29ea75
"use strict";

var _darts = require("./darts");

describe('Return the correct amount earned by a dart landing in a given point in the target problem', () => {
  test('A dart lands outside the target', () => {
    const x = -9;
    const y = 9;
    const expected = 0;
    expect((0, _darts.solve)(x, y)).toEqual(expected);
  });
  xtest('A dart lands just in the border of the target', () => {
    const x = 0;
    const y = 10;
    const expected = 1;
    expect((0, _darts.solve)(x, y)).toEqual(expected);
  });
  xtest('A dart lands in the outer circle', () => {
    const x = 4;
    const y = 4;
    const expected = 1;
    expect((0, _darts.solve)(x, y)).toEqual(expected);
  });
  xtest('A dart lands right in the border between outer and middle circles', () => {
    const x = 5;
    const y = 0;
    const expected = 5;
    expect((0, _darts.solve)(x, y)).toEqual(expected);
  });
  xtest('A dart lands in the middle circle', () => {
    const x = 0.8;
    const y = -0.8;
    const expected = 5;
    expect((0, _darts.solve)(x, y)).toEqual(expected);
  });
  xtest('A dart lands right in the border between middle and inner circles', () => {
    const x = 0;
    const y = -1;
    const expected = 10;
    expect((0, _darts.solve)(x, y)).toEqual(expected);
  });
  xtest('A dart lands in the inner circle', () => {
    const x = -0.1;
    const y = -0.1;
    const expected = 10;
    expect((0, _darts.solve)(x, y)).toEqual(expected);
  });
  xtest('A dart whose coordinates sum to > 1 but whose radius to origin is <= 1 is scored in the inner circle', () => {
    const x = 0.4;
    const y = 0.8;
    const expected = 10;
    expect((0, _darts.solve)(x, y)).toEqual(expected);
  });
  xtest('A dart whose coordinates sum to > 5 but whose radius to origin is <= 5 is scored in the middle circle', () => {
    const x = 2;
    const y = 4;
    const expected = 5;
    expect((0, _darts.solve)(x, y)).toEqual(expected);
  });
  xtest('A dart whose coordinates sum to > 10 but whose radius to origin is <= 10 is scored in the outer circle', () => {
    const x = 4;
    const y = 8;
    const expected = 1;
    expect((0, _darts.solve)(x, y)).toEqual(expected);
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhcnRzLnNwZWMuanMiXSwibmFtZXMiOlsiZGVzY3JpYmUiLCJ0ZXN0IiwieCIsInkiLCJleHBlY3RlZCIsImV4cGVjdCIsInRvRXF1YWwiLCJ4dGVzdCJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFFQUEsUUFBUSxDQUFDLDJGQUFELEVBQThGLE1BQU07QUFDMUdDLEVBQUFBLElBQUksQ0FBQyxpQ0FBRCxFQUFvQyxNQUFNO0FBQzVDLFVBQU1DLENBQUMsR0FBRyxDQUFDLENBQVg7QUFDQSxVQUFNQyxDQUFDLEdBQUcsQ0FBVjtBQUNBLFVBQU1DLFFBQVEsR0FBRyxDQUFqQjtBQUNBQyxJQUFBQSxNQUFNLENBQUMsa0JBQU1ILENBQU4sRUFBU0MsQ0FBVCxDQUFELENBQU4sQ0FBb0JHLE9BQXBCLENBQTRCRixRQUE1QjtBQUNELEdBTEcsQ0FBSjtBQU9BRyxFQUFBQSxLQUFLLENBQUMsK0NBQUQsRUFBa0QsTUFBTTtBQUMzRCxVQUFNTCxDQUFDLEdBQUcsQ0FBVjtBQUNBLFVBQU1DLENBQUMsR0FBRyxFQUFWO0FBQ0EsVUFBTUMsUUFBUSxHQUFHLENBQWpCO0FBQ0FDLElBQUFBLE1BQU0sQ0FBQyxrQkFBTUgsQ0FBTixFQUFTQyxDQUFULENBQUQsQ0FBTixDQUFvQkcsT0FBcEIsQ0FBNEJGLFFBQTVCO0FBQ0QsR0FMSSxDQUFMO0FBT0FHLEVBQUFBLEtBQUssQ0FBQyxrQ0FBRCxFQUFxQyxNQUFNO0FBQzlDLFVBQU1MLENBQUMsR0FBRyxDQUFWO0FBQ0EsVUFBTUMsQ0FBQyxHQUFHLENBQVY7QUFDQSxVQUFNQyxRQUFRLEdBQUcsQ0FBakI7QUFDQUMsSUFBQUEsTUFBTSxDQUFDLGtCQUFNSCxDQUFOLEVBQVNDLENBQVQsQ0FBRCxDQUFOLENBQW9CRyxPQUFwQixDQUE0QkYsUUFBNUI7QUFDRCxHQUxJLENBQUw7QUFPQUcsRUFBQUEsS0FBSyxDQUFDLG1FQUFELEVBQXNFLE1BQU07QUFDL0UsVUFBTUwsQ0FBQyxHQUFHLENBQVY7QUFDQSxVQUFNQyxDQUFDLEdBQUcsQ0FBVjtBQUNBLFVBQU1DLFFBQVEsR0FBRyxDQUFqQjtBQUNBQyxJQUFBQSxNQUFNLENBQUMsa0JBQU1ILENBQU4sRUFBU0MsQ0FBVCxDQUFELENBQU4sQ0FBb0JHLE9BQXBCLENBQTRCRixRQUE1QjtBQUNELEdBTEksQ0FBTDtBQU9BRyxFQUFBQSxLQUFLLENBQUMsbUNBQUQsRUFBc0MsTUFBTTtBQUMvQyxVQUFNTCxDQUFDLEdBQUcsR0FBVjtBQUNBLFVBQU1DLENBQUMsR0FBRyxDQUFDLEdBQVg7QUFDQSxVQUFNQyxRQUFRLEdBQUcsQ0FBakI7QUFDQUMsSUFBQUEsTUFBTSxDQUFDLGtCQUFNSCxDQUFOLEVBQVNDLENBQVQsQ0FBRCxDQUFOLENBQW9CRyxPQUFwQixDQUE0QkYsUUFBNUI7QUFDRCxHQUxJLENBQUw7QUFPQUcsRUFBQUEsS0FBSyxDQUFDLG1FQUFELEVBQXNFLE1BQU07QUFDL0UsVUFBTUwsQ0FBQyxHQUFHLENBQVY7QUFDQSxVQUFNQyxDQUFDLEdBQUcsQ0FBQyxDQUFYO0FBQ0EsVUFBTUMsUUFBUSxHQUFHLEVBQWpCO0FBQ0FDLElBQUFBLE1BQU0sQ0FBQyxrQkFBTUgsQ0FBTixFQUFTQyxDQUFULENBQUQsQ0FBTixDQUFvQkcsT0FBcEIsQ0FBNEJGLFFBQTVCO0FBQ0QsR0FMSSxDQUFMO0FBT0FHLEVBQUFBLEtBQUssQ0FBQyxrQ0FBRCxFQUFxQyxNQUFNO0FBQzlDLFVBQU1MLENBQUMsR0FBRyxDQUFDLEdBQVg7QUFDQSxVQUFNQyxDQUFDLEdBQUcsQ0FBQyxHQUFYO0FBQ0EsVUFBTUMsUUFBUSxHQUFHLEVBQWpCO0FBQ0FDLElBQUFBLE1BQU0sQ0FBQyxrQkFBTUgsQ0FBTixFQUFTQyxDQUFULENBQUQsQ0FBTixDQUFvQkcsT0FBcEIsQ0FBNEJGLFFBQTVCO0FBQ0QsR0FMSSxDQUFMO0FBT0FHLEVBQUFBLEtBQUssQ0FBQyxzR0FBRCxFQUF5RyxNQUFNO0FBQ2xILFVBQU1MLENBQUMsR0FBRyxHQUFWO0FBQ0EsVUFBTUMsQ0FBQyxHQUFHLEdBQVY7QUFDQSxVQUFNQyxRQUFRLEdBQUcsRUFBakI7QUFDQUMsSUFBQUEsTUFBTSxDQUFDLGtCQUFNSCxDQUFOLEVBQVNDLENBQVQsQ0FBRCxDQUFOLENBQW9CRyxPQUFwQixDQUE0QkYsUUFBNUI7QUFDRCxHQUxJLENBQUw7QUFPQUcsRUFBQUEsS0FBSyxDQUFDLHVHQUFELEVBQTBHLE1BQU07QUFDbkgsVUFBTUwsQ0FBQyxHQUFHLENBQVY7QUFDQSxVQUFNQyxDQUFDLEdBQUcsQ0FBVjtBQUNBLFVBQU1DLFFBQVEsR0FBRyxDQUFqQjtBQUNBQyxJQUFBQSxNQUFNLENBQUMsa0JBQU1ILENBQU4sRUFBU0MsQ0FBVCxDQUFELENBQU4sQ0FBb0JHLE9BQXBCLENBQTRCRixRQUE1QjtBQUNELEdBTEksQ0FBTDtBQU9BRyxFQUFBQSxLQUFLLENBQUMsd0dBQUQsRUFBMkcsTUFBTTtBQUNwSCxVQUFNTCxDQUFDLEdBQUcsQ0FBVjtBQUNBLFVBQU1DLENBQUMsR0FBRyxDQUFWO0FBQ0EsVUFBTUMsUUFBUSxHQUFHLENBQWpCO0FBQ0FDLElBQUFBLE1BQU0sQ0FBQyxrQkFBTUgsQ0FBTixFQUFTQyxDQUFULENBQUQsQ0FBTixDQUFvQkcsT0FBcEIsQ0FBNEJGLFFBQTVCO0FBQ0QsR0FMSSxDQUFMO0FBTUQsQ0F0RU8sQ0FBUiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHNvbHZlIH0gZnJvbSAnLi9kYXJ0cyc7XG5cbmRlc2NyaWJlKCdSZXR1cm4gdGhlIGNvcnJlY3QgYW1vdW50IGVhcm5lZCBieSBhIGRhcnQgbGFuZGluZyBpbiBhIGdpdmVuIHBvaW50IGluIHRoZSB0YXJnZXQgcHJvYmxlbScsICgpID0+IHtcbiAgdGVzdCgnQSBkYXJ0IGxhbmRzIG91dHNpZGUgdGhlIHRhcmdldCcsICgpID0+IHtcbiAgICBjb25zdCB4ID0gLTk7XG4gICAgY29uc3QgeSA9IDk7XG4gICAgY29uc3QgZXhwZWN0ZWQgPSAwO1xuICAgIGV4cGVjdChzb2x2ZSh4LCB5KSkudG9FcXVhbChleHBlY3RlZCk7XG4gIH0pO1xuXG4gIHh0ZXN0KCdBIGRhcnQgbGFuZHMganVzdCBpbiB0aGUgYm9yZGVyIG9mIHRoZSB0YXJnZXQnLCAoKSA9PiB7XG4gICAgY29uc3QgeCA9IDA7XG4gICAgY29uc3QgeSA9IDEwO1xuICAgIGNvbnN0IGV4cGVjdGVkID0gMTtcbiAgICBleHBlY3Qoc29sdmUoeCwgeSkpLnRvRXF1YWwoZXhwZWN0ZWQpO1xuICB9KTtcblxuICB4dGVzdCgnQSBkYXJ0IGxhbmRzIGluIHRoZSBvdXRlciBjaXJjbGUnLCAoKSA9PiB7XG4gICAgY29uc3QgeCA9IDQ7XG4gICAgY29uc3QgeSA9IDQ7XG4gICAgY29uc3QgZXhwZWN0ZWQgPSAxO1xuICAgIGV4cGVjdChzb2x2ZSh4LCB5KSkudG9FcXVhbChleHBlY3RlZCk7XG4gIH0pO1xuXG4gIHh0ZXN0KCdBIGRhcnQgbGFuZHMgcmlnaHQgaW4gdGhlIGJvcmRlciBiZXR3ZWVuIG91dGVyIGFuZCBtaWRkbGUgY2lyY2xlcycsICgpID0+IHtcbiAgICBjb25zdCB4ID0gNTtcbiAgICBjb25zdCB5ID0gMDtcbiAgICBjb25zdCBleHBlY3RlZCA9IDU7XG4gICAgZXhwZWN0KHNvbHZlKHgsIHkpKS50b0VxdWFsKGV4cGVjdGVkKTtcbiAgfSk7XG5cbiAgeHRlc3QoJ0EgZGFydCBsYW5kcyBpbiB0aGUgbWlkZGxlIGNpcmNsZScsICgpID0+IHtcbiAgICBjb25zdCB4ID0gMC44O1xuICAgIGNvbnN0IHkgPSAtMC44O1xuICAgIGNvbnN0IGV4cGVjdGVkID0gNTtcbiAgICBleHBlY3Qoc29sdmUoeCwgeSkpLnRvRXF1YWwoZXhwZWN0ZWQpO1xuICB9KTtcblxuICB4dGVzdCgnQSBkYXJ0IGxhbmRzIHJpZ2h0IGluIHRoZSBib3JkZXIgYmV0d2VlbiBtaWRkbGUgYW5kIGlubmVyIGNpcmNsZXMnLCAoKSA9PiB7XG4gICAgY29uc3QgeCA9IDA7XG4gICAgY29uc3QgeSA9IC0xO1xuICAgIGNvbnN0IGV4cGVjdGVkID0gMTA7XG4gICAgZXhwZWN0KHNvbHZlKHgsIHkpKS50b0VxdWFsKGV4cGVjdGVkKTtcbiAgfSk7XG5cbiAgeHRlc3QoJ0EgZGFydCBsYW5kcyBpbiB0aGUgaW5uZXIgY2lyY2xlJywgKCkgPT4ge1xuICAgIGNvbnN0IHggPSAtMC4xO1xuICAgIGNvbnN0IHkgPSAtMC4xO1xuICAgIGNvbnN0IGV4cGVjdGVkID0gMTA7XG4gICAgZXhwZWN0KHNvbHZlKHgsIHkpKS50b0VxdWFsKGV4cGVjdGVkKTtcbiAgfSk7XG5cbiAgeHRlc3QoJ0EgZGFydCB3aG9zZSBjb29yZGluYXRlcyBzdW0gdG8gPiAxIGJ1dCB3aG9zZSByYWRpdXMgdG8gb3JpZ2luIGlzIDw9IDEgaXMgc2NvcmVkIGluIHRoZSBpbm5lciBjaXJjbGUnLCAoKSA9PiB7XG4gICAgY29uc3QgeCA9IDAuNDtcbiAgICBjb25zdCB5ID0gMC44O1xuICAgIGNvbnN0IGV4cGVjdGVkID0gMTA7XG4gICAgZXhwZWN0KHNvbHZlKHgsIHkpKS50b0VxdWFsKGV4cGVjdGVkKTtcbiAgfSk7XG5cbiAgeHRlc3QoJ0EgZGFydCB3aG9zZSBjb29yZGluYXRlcyBzdW0gdG8gPiA1IGJ1dCB3aG9zZSByYWRpdXMgdG8gb3JpZ2luIGlzIDw9IDUgaXMgc2NvcmVkIGluIHRoZSBtaWRkbGUgY2lyY2xlJywgKCkgPT4ge1xuICAgIGNvbnN0IHggPSAyO1xuICAgIGNvbnN0IHkgPSA0O1xuICAgIGNvbnN0IGV4cGVjdGVkID0gNTtcbiAgICBleHBlY3Qoc29sdmUoeCwgeSkpLnRvRXF1YWwoZXhwZWN0ZWQpO1xuICB9KTtcblxuICB4dGVzdCgnQSBkYXJ0IHdob3NlIGNvb3JkaW5hdGVzIHN1bSB0byA+IDEwIGJ1dCB3aG9zZSByYWRpdXMgdG8gb3JpZ2luIGlzIDw9IDEwIGlzIHNjb3JlZCBpbiB0aGUgb3V0ZXIgY2lyY2xlJywgKCkgPT4ge1xuICAgIGNvbnN0IHggPSA0O1xuICAgIGNvbnN0IHkgPSA4O1xuICAgIGNvbnN0IGV4cGVjdGVkID0gMTtcbiAgICBleHBlY3Qoc29sdmUoeCwgeSkpLnRvRXF1YWwoZXhwZWN0ZWQpO1xuICB9KTtcbn0pO1xuIl19