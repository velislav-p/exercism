{"version":3,"sources":["leap.spec.js"],"names":["describe","test","expect","toBe","xtest"],"mappings":";;AAAA;;AAEAA,QAAQ,CAAC,aAAD,EAAgB,MAAM;AAC5BC,EAAAA,IAAI,CAAC,sCAAD,EAAyC,MAAM;AACjDC,IAAAA,MAAM,CAAC,kBAAO,IAAP,CAAD,CAAN,CAAqBC,IAArB,CAA0B,KAA1B;AACD,GAFG,CAAJ;AAIAF,EAAAA,IAAI,CAAC,sDAAD,EAAyD,MAAM;AACjEC,IAAAA,MAAM,CAAC,kBAAO,IAAP,CAAD,CAAN,CAAqBC,IAArB,CAA0B,IAA1B;AACD,GAFG,CAAJ;AAIAF,EAAAA,IAAI,CAAC,0DAAD,EAA6D,MAAM;AACrEC,IAAAA,MAAM,CAAC,kBAAO,IAAP,CAAD,CAAN,CAAqBC,IAArB,CAA0B,KAA1B;AACD,GAFG,CAAJ;AAIAC,EAAAA,KAAK,CAAC,kCAAD,EAAqC,MAAM;AAC9CF,IAAAA,MAAM,CAAC,kBAAO,IAAP,CAAD,CAAN,CAAqBC,IAArB,CAA0B,IAA1B;AACD,GAFI,CAAL;AAIAC,EAAAA,KAAK,CAAC,0DAAD,EAA6D,MAAM;AACtEF,IAAAA,MAAM,CAAC,kBAAO,IAAP,CAAD,CAAN,CAAqBC,IAArB,CAA0B,KAA1B;AACD,GAFI,CAAL;AAGD,CApBO,CAAR","sourcesContent":["import { isLeap } from './leap';\n\ndescribe('A leap year', () => {\n  test('year not divisible by 4: common year', () => {\n    expect(isLeap(2015)).toBe(false);\n  });\n\n  test('year divisible by 4, not divisible by 100: leap year', () => {\n    expect(isLeap(2016)).toBe(true);\n  });\n\n  test('year divisible by 100, not divisible by 400: common year', () => {\n    expect(isLeap(2100)).toBe(false);\n  });\n\n  xtest('year divisible by 400: leap year', () => {\n    expect(isLeap(2000)).toBe(true);\n  });\n\n  xtest('year divisible by 200, not divisible by 400: common year', () => {\n    expect(isLeap(1800)).toBe(false);\n  });\n});\n"]}